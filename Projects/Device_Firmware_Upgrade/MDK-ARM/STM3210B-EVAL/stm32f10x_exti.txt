; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm3210b-eval\stm32f10x_exti.o --asm_dir=.\STM3210B-EVAL\ --list_dir=.\STM3210B-EVAL\ --depend=.\stm3210b-eval\stm32f10x_exti.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\STM3210B_EVAL -I..\DFU\inc -I..\..\..\Utilities\STM32_EVAL\Common -ID:\Keil5\ARM\RV31\INC -ID:\Keil5\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include -ID:\Keil5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD -DUSE_STM3210B_EVAL --omf_browse=.\stm3210b-eval\stm32f10x_exti.crf ..\..\..\Libraries\STM32F10x_StdPeriph_Driver\src\stm32f10x_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;214      */
;;;215    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;216    {
;;;217      /* Check the parameters */
;;;218      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;219      
;;;220      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;221    }
000004  4770              BX       lr
;;;222    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;254      */
;;;255    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;256    {
;;;257      /* Check the parameters */
;;;258      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;259      
;;;260      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;261    }
000004  4770              BX       lr
;;;262    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;90       */
;;;91     void EXTI_DeInit(void)
000000  4906              LDR      r1,|L3.28|
;;;92     {
;;;93       EXTI->IMR = 0x00000000;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;94       EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;95       EXTI->RTSR = 0x00000000; 
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;96       EXTI->FTSR = 0x00000000; 
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;97       EXTI->PR = 0x000FFFFF;
000012  4902              LDR      r1,|L3.28|
000014  4802              LDR      r0,|L3.32|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;98     }
00001a  4770              BX       lr
;;;99     
                          ENDP

                  |L3.28|
                          DCD      0x40010400
                  |L3.32|
                          DCD      0x000fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;176      */
;;;177    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;178    {
;;;179      /* Check the parameters */
;;;180      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;181      
;;;182      EXTI->SWIER |= EXTI_Line;
000002  680a              LDR      r2,[r1,#0]
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;183    }
000008  4770              BX       lr
;;;184    
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0x40010410

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;191      */
;;;192    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4a03              LDR      r2,|L5.16|
;;;193    {
000002  4601              MOV      r1,r0
;;;194      FlagStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;195      /* Check the parameters */
;;;196      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;197      
;;;198      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
00000a  d000              BEQ      |L5.14|
;;;199      {
;;;200        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L5.14|
;;;201      }
;;;202      else
;;;203      {
;;;204        bitstatus = RESET;
;;;205      }
;;;206      return bitstatus;
;;;207    }
00000e  4770              BX       lr
;;;208    
                          ENDP

                  |L5.16|
                          DCD      0x40010414

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;229      */
;;;230    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4a06              LDR      r2,|L6.28|
;;;231    {
000002  4601              MOV      r1,r0
;;;232      ITStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;233      uint32_t enablestatus = 0;
;;;234      /* Check the parameters */
;;;235      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;236      
;;;237      enablestatus =  EXTI->IMR & EXTI_Line;
000006  6812              LDR      r2,[r2,#0]
;;;238      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
000008  4b04              LDR      r3,|L6.28|
00000a  400a              ANDS     r2,r2,r1              ;237
00000c  3314              ADDS     r3,r3,#0x14
00000e  681b              LDR      r3,[r3,#0]
000010  420b              TST      r3,r1
000012  d002              BEQ      |L6.26|
000014  2a00              CMP      r2,#0
000016  d000              BEQ      |L6.26|
;;;239      {
;;;240        bitstatus = SET;
000018  2001              MOVS     r0,#1
                  |L6.26|
;;;241      }
;;;242      else
;;;243      {
;;;244        bitstatus = RESET;
;;;245      }
;;;246      return bitstatus;
;;;247    }
00001a  4770              BX       lr
;;;248    
                          ENDP

                  |L6.28|
                          DCD      0x40010400

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;106      */
;;;107    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  b530              PUSH     {r4,r5,lr}
;;;108    {
;;;109      uint32_t tmp = 0;
;;;110    
;;;111      /* Check the parameters */
;;;112      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;113      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;114      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;115      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;116    
;;;117      tmp = (uint32_t)EXTI_BASE;
000002  491a              LDR      r1,|L7.108|
;;;118         
;;;119      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7983              LDRB     r3,[r0,#6]
000006  6802              LDR      r2,[r0,#0]            ;108
000008  b353              CBZ      r3,|L7.96|
;;;120      {
;;;121        /* Clear EXTI line configuration */
;;;122        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000a  680b              LDR      r3,[r1,#0]
00000c  4393              BICS     r3,r3,r2
00000e  600b              STR      r3,[r1,#0]
;;;123        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000010  1d0a              ADDS     r2,r1,#4
000012  6813              LDR      r3,[r2,#0]
000014  6804              LDR      r4,[r0,#0]
000016  43a3              BICS     r3,r3,r4
000018  6013              STR      r3,[r2,#0]
;;;124        
;;;125        tmp += EXTI_InitStruct->EXTI_Mode;
00001a  7902              LDRB     r2,[r0,#4]
00001c  440a              ADD      r2,r2,r1
;;;126    
;;;127        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00001e  6813              LDR      r3,[r2,#0]
000020  6804              LDR      r4,[r0,#0]
000022  4323              ORRS     r3,r3,r4
000024  6013              STR      r3,[r2,#0]
;;;128    
;;;129        /* Clear Rising Falling edge configuration */
;;;130        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000026  4a11              LDR      r2,|L7.108|
000028  3208              ADDS     r2,r2,#8
00002a  6813              LDR      r3,[r2,#0]
00002c  6804              LDR      r4,[r0,#0]
00002e  43a3              BICS     r3,r3,r4
000030  6013              STR      r3,[r2,#0]
;;;131        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000032  1d13              ADDS     r3,r2,#4
000034  681c              LDR      r4,[r3,#0]
000036  6805              LDR      r5,[r0,#0]
000038  43ac              BICS     r4,r4,r5
00003a  601c              STR      r4,[r3,#0]
;;;132        
;;;133        /* Select the trigger for the selected external interrupts */
;;;134        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00003c  7944              LDRB     r4,[r0,#5]
00003e  2c10              CMP      r4,#0x10
000040  d005              BEQ      |L7.78|
;;;135        {
;;;136          /* Rising Falling edge */
;;;137          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;138          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;139        }
;;;140        else
;;;141        {
;;;142          tmp = (uint32_t)EXTI_BASE;
;;;143          tmp += EXTI_InitStruct->EXTI_Trigger;
000042  4421              ADD      r1,r1,r4
;;;144    
;;;145          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000044  680a              LDR      r2,[r1,#0]
000046  6800              LDR      r0,[r0,#0]
000048  4302              ORRS     r2,r2,r0
00004a  600a              STR      r2,[r1,#0]
;;;146        }
;;;147      }
;;;148      else
;;;149      {
;;;150        tmp += EXTI_InitStruct->EXTI_Mode;
;;;151    
;;;152        /* Disable the selected external lines */
;;;153        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;154      }
;;;155    }
00004c  bd30              POP      {r4,r5,pc}
                  |L7.78|
00004e  6811              LDR      r1,[r2,#0]            ;137
000050  6804              LDR      r4,[r0,#0]            ;137
000052  4321              ORRS     r1,r1,r4              ;137
000054  6011              STR      r1,[r2,#0]            ;137
000056  6819              LDR      r1,[r3,#0]            ;138
000058  6800              LDR      r0,[r0,#0]            ;138
00005a  4301              ORRS     r1,r1,r0              ;138
00005c  6019              STR      r1,[r3,#0]            ;138
00005e  bd30              POP      {r4,r5,pc}
                  |L7.96|
000060  7900              LDRB     r0,[r0,#4]            ;150
000062  4408              ADD      r0,r0,r1              ;150
000064  6801              LDR      r1,[r0,#0]            ;153
000066  4391              BICS     r1,r1,r2              ;153
000068  6001              STR      r1,[r0,#0]            ;153
00006a  bd30              POP      {r4,r5,pc}
;;;156    
                          ENDP

                  |L7.108|
                          DCD      0x40010400

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;162      */
;;;163    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;164    {
;;;165      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;166      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;167      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  220c              MOVS     r2,#0xc
000008  7142              STRB     r2,[r0,#5]
;;;168      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  7181              STRB     r1,[r0,#6]
;;;169    }
00000c  4770              BX       lr
;;;170    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm32f10x_exti.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_stm32f10x_exti_c_28b3b60e____REV16|
#line 129 "D:\\Keil5\\ARM\\PACK\\ARM\\CMSIS\\3.20.4\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f10x_exti_c_28b3b60e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_stm32f10x_exti_c_28b3b60e____REVSH|
#line 144
|__asm___16_stm32f10x_exti_c_28b3b60e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
