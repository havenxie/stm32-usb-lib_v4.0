; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm3210b-eval\spi_if.o --asm_dir=.\STM3210B-EVAL\ --list_dir=.\STM3210B-EVAL\ --depend=.\stm3210b-eval\spi_if.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\STM3210B_EVAL -I..\DFU\inc -I..\..\..\Utilities\STM32_EVAL\Common -ID:\Keil5\ARM\RV31\INC -ID:\Keil5\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include -ID:\Keil5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD -DUSE_STM3210B_EVAL --omf_browse=.\stm3210b-eval\spi_if.crf ..\src\spi_if.c]
                          THUMB

                          AREA ||i.SPI_If_Erase||, CODE, READONLY, ALIGN=1

                  SPI_If_Erase PROC
;;;60     *******************************************************************************/
;;;61     uint16_t SPI_If_Erase(uint32_t SectorAddress)
000000  b510              PUSH     {r4,lr}
;;;62     {
;;;63       sFLASH_EraseSector(SectorAddress);
000002  f7fffffe          BL       sFLASH_EraseSector
;;;64       return MAL_OK;
000006  2000              MOVS     r0,#0
;;;65     }
000008  bd10              POP      {r4,pc}
;;;66     
                          ENDP


                          AREA ||i.SPI_If_Init||, CODE, READONLY, ALIGN=1

                  SPI_If_Init PROC
;;;47     *******************************************************************************/
;;;48     uint16_t SPI_If_Init(void)
000000  b510              PUSH     {r4,lr}
;;;49     {
;;;50       sFLASH_Init();
000002  f7fffffe          BL       sFLASH_Init
;;;51       return MAL_OK;
000006  2000              MOVS     r0,#0
;;;52     }
000008  bd10              POP      {r4,pc}
;;;53     
                          ENDP


                          AREA ||i.SPI_If_Read||, CODE, READONLY, ALIGN=2

                  SPI_If_Read PROC
;;;103    *******************************************************************************/
;;;104    uint8_t *SPI_If_Read(uint32_t SectorAddress, uint32_t DataLength)
000000  b28a              UXTH     r2,r1
;;;105    {
000002  b510              PUSH     {r4,lr}
;;;106      sFLASH_ReadBuffer(MAL_Buffer, SectorAddress, (uint16_t)DataLength);
000004  4601              MOV      r1,r0
000006  4802              LDR      r0,|L3.16|
000008  f7fffffe          BL       sFLASH_ReadBuffer
;;;107      return MAL_Buffer;
00000c  4800              LDR      r0,|L3.16|
;;;108    }
00000e  bd10              POP      {r4,pc}
;;;109    
                          ENDP

                  |L3.16|
                          DCD      MAL_Buffer

                          AREA ||i.SPI_If_Write||, CODE, READONLY, ALIGN=2

                  SPI_If_Write PROC
;;;73     *******************************************************************************/
;;;74     uint16_t SPI_If_Write(uint32_t SectorAddress, uint32_t DataLength)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;75     {
;;;76       uint32_t idx, pages;
;;;77     
;;;78       pages = (((DataLength & 0xFF00)) >> 8);
;;;79     
;;;80       if  (DataLength & 0xFF) /* Not a 256 aligned data */
;;;81       {
;;;82         for ( idx = DataLength; idx < ((DataLength & 0xFF00) + 0x100) ; idx++)
;;;83         {
;;;84           MAL_Buffer[idx] = 0xFF;
000004  4e11              LDR      r6,|L4.76|
000006  4605              MOV      r5,r0                 ;75
000008  f3c12407          UBFX     r4,r1,#8,#8           ;78
00000c  f0110fff          TST      r1,#0xff              ;80
000010  d00a              BEQ      |L4.40|
000012  f401407f          AND      r0,r1,#0xff00         ;82
000016  22ff              MOVS     r2,#0xff
000018  f5007080          ADD      r0,r0,#0x100          ;82
00001c  e001              B        |L4.34|
                  |L4.30|
00001e  5472              STRB     r2,[r6,r1]
000020  1c49              ADDS     r1,r1,#1              ;82
                  |L4.34|
000022  4288              CMP      r0,r1                 ;82
000024  d8fb              BHI      |L4.30|
;;;85         }
;;;86         pages = (((DataLength & 0xFF00)) >> 8 ) + 1;
000026  1c64              ADDS     r4,r4,#1
                  |L4.40|
;;;87       }
;;;88     
;;;89       for (idx = 0; idx < pages; idx++)
000028  2700              MOVS     r7,#0
;;;90       {
;;;91         sFLASH_WritePage(&MAL_Buffer[idx*256], SectorAddress, 256);
00002a  f44f7880          MOV      r8,#0x100
00002e  e008              B        |L4.66|
                  |L4.48|
000030  eb062007          ADD      r0,r6,r7,LSL #8
000034  4642              MOV      r2,r8
000036  4629              MOV      r1,r5
000038  f7fffffe          BL       sFLASH_WritePage
;;;92         SectorAddress += 0x100;
00003c  f5057580          ADD      r5,r5,#0x100
000040  1c7f              ADDS     r7,r7,#1              ;89
                  |L4.66|
000042  42a7              CMP      r7,r4                 ;89
000044  d3f4              BCC      |L4.48|
;;;93       }
;;;94       return MAL_OK;
000046  2000              MOVS     r0,#0
;;;95     }
000048  e8bd81f0          POP      {r4-r8,pc}
;;;96     
                          ENDP

                  |L4.76|
                          DCD      MAL_Buffer

;*** Start embedded assembler ***

#line 1 "..\\src\\spi_if.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___8_spi_if_c_3f87c816____REV16|
#line 129 "D:\\Keil5\\ARM\\PACK\\ARM\\CMSIS\\3.20.4\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_spi_if_c_3f87c816____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___8_spi_if_c_3f87c816____REVSH|
#line 144
|__asm___8_spi_if_c_3f87c816____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
