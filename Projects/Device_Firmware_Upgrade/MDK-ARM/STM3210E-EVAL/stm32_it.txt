; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm3210e-eval\stm32_it.o --asm_dir=.\STM3210E-EVAL\ --list_dir=.\STM3210E-EVAL\ --depend=.\stm3210e-eval\stm32_it.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\STM3210E_EVAL -I..\DFU\inc -I..\..\..\Utilities\STM32_EVAL\Common -ID:\Keil5\ARM\RV31\INC -ID:\Keil5\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include -ID:\Keil5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL --omf_browse=.\stm3210e-eval\stm32_it.crf ..\src\stm32_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
                  |L1.0|
;;;97     *******************************************************************************/
;;;98     void BusFault_Handler(void)
000000  e7fe              B        |L1.0|
;;;99     {
;;;100      /* Go to infinite loop when Bus Fault exception occurs */
;;;101      while (1)
;;;102      {
;;;103      }
;;;104    }
;;;105    
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;138    *******************************************************************************/
;;;139    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;140    {
;;;141    }
;;;142    
                          ENDP


                          AREA ||i.EXTI15_10_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI15_10_IRQHandler PROC
;;;195    #else
;;;196    void EXTI15_10_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;197    #endif
;;;198    {
;;;199      if (EXTI_GetITStatus(KEY_BUTTON_EXTI_LINE) != RESET)
000002  f44f7480          MOV      r4,#0x100
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       EXTI_GetITStatus
00000c  2800              CMP      r0,#0
00000e  d00c              BEQ      |L3.42|
;;;200      {
;;;201        if (pInformation->Current_Feature & 0x20) //Remote wake-up enabled
000010  4806              LDR      r0,|L3.44|
000012  6800              LDR      r0,[r0,#0]  ; pInformation
000014  7a40              LDRB     r0,[r0,#9]
000016  0680              LSLS     r0,r0,#26
000018  d502              BPL      |L3.32|
;;;202        {
;;;203          Resume(RESUME_INTERNAL);
00001a  2001              MOVS     r0,#1
00001c  f7fffffe          BL       Resume
                  |L3.32|
;;;204        }
;;;205    
;;;206        /* Clear the EXTI line 9 pending bit */
;;;207        EXTI_ClearITPendingBit(KEY_BUTTON_EXTI_LINE);
000020  4620              MOV      r0,r4
000022  e8bd4010          POP      {r4,lr}
000026  f7ffbffe          B.W      EXTI_ClearITPendingBit
                  |L3.42|
;;;208      }
;;;209    }
00002a  bd10              POP      {r4,pc}
;;;210    
                          ENDP

                  |L3.44|
                          DCD      pInformation

                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
                  |L4.0|
;;;67     *******************************************************************************/
;;;68     void HardFault_Handler(void)
000000  e7fe              B        |L4.0|
;;;69     {
;;;70       /* Go to infinite loop when Hard Fault exception occurs */
;;;71       while (1)
;;;72       {
;;;73       }
;;;74     }
;;;75     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
                  |L5.0|
;;;82     *******************************************************************************/
;;;83     void MemManage_Handler(void)
000000  e7fe              B        |L5.0|
;;;84     {
;;;85       /* Go to infinite loop when Memory Manage exception occurs */
;;;86       while (1)
;;;87       {
;;;88       }
;;;89     }
;;;90     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;56     *******************************************************************************/
;;;57     void NMI_Handler(void)
000000  4770              BX       lr
;;;58     {
;;;59     }
;;;60     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;149    *******************************************************************************/
;;;150    void PendSV_Handler(void)
000000  4770              BX       lr
;;;151    {
;;;152    }
;;;153    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;127    *******************************************************************************/
;;;128    void SVC_Handler(void)
000000  4770              BX       lr
;;;129    {
;;;130    }
;;;131    
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
;;;160    *******************************************************************************/
;;;161    void SysTick_Handler(void)
000000  4770              BX       lr
;;;162    {
;;;163    }
;;;164    
                          ENDP


                          AREA ||i.USBWakeUp_IRQHandler||, CODE, READONLY, ALIGN=1

                  USBWakeUp_IRQHandler PROC
;;;221    #else
;;;222    void USBWakeUp_IRQHandler(void)
000000  f44f2080          MOV      r0,#0x40000
;;;223    #endif
;;;224    {
;;;225      EXTI_ClearITPendingBit(EXTI_Line18);
000004  f7ffbffe          B.W      EXTI_ClearITPendingBit
;;;226    }
;;;227    
                          ENDP


                          AREA ||i.USB_LP_CAN1_RX0_IRQHandler||, CODE, READONLY, ALIGN=1

                  USB_LP_CAN1_RX0_IRQHandler PROC
;;;177    #else
;;;178    void USB_LP_CAN1_RX0_IRQHandler(void)
000000  f7ffbffe          B.W      USB_Istr
;;;179    #endif
;;;180    {
;;;181      USB_Istr();
;;;182    }
;;;183    /*******************************************************************************
                          ENDP


                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
                  |L12.0|
;;;112    *******************************************************************************/
;;;113    void UsageFault_Handler(void)
000000  e7fe              B        |L12.0|
;;;114    {
;;;115      /* Go to infinite loop when Usage Fault exception occurs */
;;;116      while (1)
;;;117      {
;;;118      }
;;;119    }
;;;120    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\src\\stm32_it.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_stm32_it_c_bb8ca80c____REV16|
#line 129 "D:\\Keil5\\ARM\\PACK\\ARM\\CMSIS\\3.20.4\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_stm32_it_c_bb8ca80c____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_stm32_it_c_bb8ca80c____REVSH|
#line 144
|__asm___10_stm32_it_c_bb8ca80c____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
