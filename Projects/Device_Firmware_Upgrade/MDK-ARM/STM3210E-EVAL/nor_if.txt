; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm3210e-eval\nor_if.o --asm_dir=.\STM3210E-EVAL\ --list_dir=.\STM3210E-EVAL\ --depend=.\stm3210e-eval\nor_if.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\STM3210E_EVAL -I..\DFU\inc -I..\..\..\Utilities\STM32_EVAL\Common -ID:\Keil5\ARM\RV31\INC -ID:\Keil5\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include -ID:\Keil5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL --omf_browse=.\stm3210e-eval\nor_if.crf ..\src\nor_if.c]
                          THUMB

                          AREA ||i.NOR_If_Erase||, CODE, READONLY, ALIGN=1

                  NOR_If_Erase PROC
;;;71     *******************************************************************************/
;;;72     uint16_t NOR_If_Erase(uint32_t Address)
000000  b510              PUSH     {r4,lr}
;;;73     {
;;;74       /* Erase the destination memory */
;;;75       FSMC_NOR_EraseBlock(Address & 0x00FFFFFF);    
000002  f020407f          BIC      r0,r0,#0xff000000
000006  f7fffffe          BL       FSMC_NOR_EraseBlock
;;;76     
;;;77       return MAL_OK;
00000a  2000              MOVS     r0,#0
;;;78     }
00000c  bd10              POP      {r4,pc}
;;;79     
                          ENDP


                          AREA ||i.NOR_If_Init||, CODE, READONLY, ALIGN=1

                  NOR_If_Init PROC
;;;53     *******************************************************************************/
;;;54     uint16_t NOR_If_Init(void)
000000  b510              PUSH     {r4,lr}
;;;55     {
;;;56       /* Configure FSMC Bank1 NOR/SRAM2 */
;;;57       FSMC_NOR_Init();
000002  f7fffffe          BL       FSMC_NOR_Init
;;;58     
;;;59       /* Enable FSMC Bank1 NOR/SRAM2 */
;;;60       FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM2, ENABLE);
000006  2101              MOVS     r1,#1
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       FSMC_NORSRAMCmd
;;;61     
;;;62       return MAL_OK;
00000e  2000              MOVS     r0,#0
;;;63     }
000010  bd10              POP      {r4,pc}
;;;64     
                          ENDP


                          AREA ||i.NOR_If_Read||, CODE, READONLY, ALIGN=1

                  NOR_If_Read PROC
;;;106    *******************************************************************************/
;;;107    uint8_t *NOR_If_Read(uint32_t Address, uint32_t DataLength)
000000  4770              BX       lr
;;;108    {
;;;109      return  (uint8_t*)(Address);
;;;110    }
;;;111    
                          ENDP


                          AREA ||i.NOR_If_Write||, CODE, READONLY, ALIGN=2

                  NOR_If_Write PROC
;;;86     *******************************************************************************/
;;;87     uint16_t NOR_If_Write(uint32_t Address, uint32_t DataLength)
000000  b510              PUSH     {r4,lr}
;;;88     {
;;;89       if ((DataLength & 1) == 1) /* Not an aligned data */
000002  07ca              LSLS     r2,r1,#31
000004  d005              BEQ      |L4.18|
;;;90       {
;;;91         DataLength += 1;
;;;92         MAL_Buffer[DataLength-1] = 0xFF;
000006  4b07              LDR      r3,|L4.36|
000008  1c49              ADDS     r1,r1,#1              ;91
00000a  440b              ADD      r3,r3,r1
00000c  22ff              MOVS     r2,#0xff
00000e  f8032c01          STRB     r2,[r3,#-1]
                  |L4.18|
;;;93       }
;;;94       
;;;95       FSMC_NOR_WriteBuffer((uint16_t *)MAL_Buffer, (Address&0x00FFFFFF), DataLength >> 1);  
000012  084a              LSRS     r2,r1,#1
000014  f020417f          BIC      r1,r0,#0xff000000
000018  4802              LDR      r0,|L4.36|
00001a  f7fffffe          BL       FSMC_NOR_WriteBuffer
;;;96       
;;;97       return MAL_OK;
00001e  2000              MOVS     r0,#0
;;;98     }
000020  bd10              POP      {r4,pc}
;;;99     
                          ENDP

000022  0000              DCW      0x0000
                  |L4.36|
                          DCD      MAL_Buffer

;*** Start embedded assembler ***

#line 1 "..\\src\\nor_if.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___8_nor_if_c_a2d54713____REV16|
#line 129 "D:\\Keil5\\ARM\\PACK\\ARM\\CMSIS\\3.20.4\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_nor_if_c_a2d54713____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___8_nor_if_c_a2d54713____REVSH|
#line 144
|__asm___8_nor_if_c_a2d54713____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
